<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
	<head>
		<title>Media API Exercise</title>
				<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<style type="text/css">
			body {font-family : Helvetica,Arial,sans-serif; color : #619FA8;}
			legend {
				color: #CF0050;
			}
		</style>
		<!-- Javascript Media API wrapper from opensource.brightcove.com -->
		<script type="text/javascript" src="http://files.brightcove.com/bc-mapi.js"></script>
		
	</head>
	<body>
		<h2>Media API Training</h2>
		<!-- Start of Brightcove Player -->

		<div style="display:none">

		</div>

		<!--
		By use of this code snippet, I agree to the Brightcove Publisher T and C
		found at https://accounts.brightcove.com/en/terms-and-conditions/.
		-->

		<script language="JavaScript" type="text/javascript" src="http://admin.brightcove.com/js/BrightcoveExperiences.js"></script>
		<object id="myExperience" class="BrightcoveExperience">
		  <param name="bgcolor" value="#FFFFFF" />
		  <param name="width" value="480" />
		  <param name="height" value="270" />
		  <param name="playerID" value="921267190001" />
		  <param name="playerKey" value="AQ~~,AAAA1oy1bvE~,ALl2ezBj3WG3MLvDx9F9zkV06cNK00ey" />
		  <param name="isVid" value="true" />
		  <param name="isUI" value="true" />
		  <param name="dynamicStreaming" value="true" />
		  <!-- params for Universal Player API -->
		  <param name="includeAPI" value="true" />
		  <param name="templateReadyHandler" value="BCL.onTemplateReady" />
		  

		</object>

		<!--
		This script tag will cause the Brightcove Players defined above it to be created as soon
		as the line is read by the browser. If you wish to have the player instantiated only after
		the rest of the HTML is processed and the page load is complete, remove the line.
		-->
		<script type="text/javascript">brightcove.createExperiences();</script>

		<!-- End of Brightcove Player -->
		<div id="search">
		<p>Enter keywords to search for videos, using commas to separate multiple terms -- hint: try "sea," "bird," or "wildlife."</p>
		<p>
			<input type="text" id="searchTerm" size="30"/>
			<br/>
			<input type="button" value="Submit"  onclick="BCL.searchForVideos()" />
		</p>
		</div>
    <fieldset>
      <legend>API Query</legend> <p id="query" style="width:100%;border:none"></p>
    </fieldset><br>
    <fieldset>
      <legend>Results</legend>
			<div id="results"></div>
    </fieldset><br>
		<!-- This is the script to modify for the exercise -->
		<script type="text/javascript">
			// BCL Media API search maker -- adapted from JS-MAPI on opensource.brightcove.com
			// namespace to keep all the "global" vars together
			var BCL = {};
			BCMAPI.token = "WDGO_XdKqXVJRVGtrNuGLxCYDNoR-SvA5yUqX2eE6KjgefOxRzQilw..";
			BCMAPI.callback = "BCL.onSearchResponse";
			BCL.params = {};
			BCL.srcValue = "";
			BCL.onSearchResponse = function(jsonData) {
				document.getElementById("query").innerHTML = BCL.srcValue;
				console.log(jsonData);
				var str = "";
				for (var i = 0; i < jsonData["items"].length; i++) {
					var video = jsonData["items"][i];
					str += "<a onclick='BCL.playVideo(" + video.id + ")'><img src='"+ video.thumbnailURL + "'/> " + video.name + "</a><br/>"
				}
				console.log(str);
				document.getElementById("results").innerHTML = str;
			}
			// search for videos
			BCL.searchForVideos = function() {
				var searchTerm = document.getElementById("searchTerm").value;
				console.log("search term: "+searchTerm);
				if (searchTerm != "") {
						BCL.params.any = "tag:"+searchTerm;
				}
				console.log(BCL.params.any.length);
				BCMAPI.search(BCL.params);
			}

			// Player API scripting
			// event listener for the player being ready
			BCL.onTemplateReady = function (event) {
			  console.log("onTemplateReady");
			  BCL.player = brightcove.api.getExperience("myExperience");
			  // get a reference to the video player
			  BCL.videoPlayer = BCL.player.getModule(brightcove.api.modules.APIModules.VIDEO_PLAYER);
			}
			// play video function
			BCL.playVideo = function(videoID) {
				BCL.videoPlayer.loadVideoByID(videoID);
			}
		</script>

	</body>
</html>
